{"version":3,"sources":["components/Navbar.js","components/UpperCase.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","head","placeholder","role","onClick","bgcol","for","UpperCase","useState","text","setText","style","color","heading","onChange","event","target","value","backgroundColor","newvar","toUpperCase","showAlert","toLowerCase","new2","trim","y","charAt","slice","length","split","Alert","alert","class","word","cap","defaultProps","App","setMode","setAlert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.593effb8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.head}</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">About</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"http://google.com\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Dropdown\r\n                                  </a>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <li><a className=\"dropdown-item\" href=\"http://google.com\">Action</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"http://google.com\">Another action</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"http://google.com\">Something else here</a></li>\r\n                                </ul>\r\n                            </li> */}\r\n\r\n                        </ul>\r\n\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n            <div className={` container bg-${props.mode} ms-0`}>\r\n\r\n                <div className={`form-check form-switch text-${props.mode === 'light' ? '#111111' : 'light'} mx-2`}>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" onClick={props.bgcol} />\r\n                    <label className=\"form-check-label\" for=\"flexSwitchCheckChecked\">Enable dark mode</label>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    head: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'My App default',\r\n    head: 'Home default'\r\n};","import React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nexport default function UpperCase(props) {\r\n\r\n    const [text, setText] = useState('');\r\n\r\n\r\n    const uppercase = () => {\r\n        let newvar = text.toUpperCase();\r\n\r\n        setText(newvar);\r\n        props.showAlert(\"Text converted to Uppercase\", \"success\");\r\n    }\r\n    const lowercase = () => {\r\n        let newvar = text.toLowerCase();\r\n\r\n        setText(newvar);\r\n        props.showAlert(\"Text converted to lowercase\", \"success\");\r\n    }\r\n    const cleartext = () => {\r\n\r\n\r\n        setText(\"\");\r\n        props.showAlert(\"Text cleared\", \"success\");\r\n    }\r\n    const change = (event) => {\r\n        setText(event.target.value);\r\n\r\n\r\n    }\r\n    const cremover = () => {\r\n        let new2 = text.trim();\r\n\r\n        setText(new2);\r\n        props.showAlert(\" Extra blank spaces removed\", \"success\");\r\n\r\n    }\r\n    const capital = () => {\r\n        let new2 = text.charAt(0);\r\n        let y = new2.toUpperCase();\r\n        setText(y + text.slice(1));\r\n        props.showAlert(\"First character capitalized\", \"success\");\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-4\">\r\n                <div className=\"form-floating\">\r\n                    <h4 style={{ color: props.mode === 'light' ? '#111111' : 'light' }}>{props.heading}</h4>\r\n                    <textarea className=\"form-control\" onChange={change} value={text} placeholder=\"text here\" id=\"textarea\" style={{ backgroundColor: props.mode === '#111111' ? '#111111' : 'white', color: props.mode === '#111111' ? 'white' : 'black' }}> </textarea>\r\n\r\n\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-primary mt-2 mx-2\" onClick={uppercase}>Convert to UpperCase</button>\r\n                <button type=\"button\" className=\"btn btn-primary mt-2 mx-2\" onClick={lowercase}>Convert to LowerCase</button>\r\n\r\n                <button type=\"button\" className=\"btn btn-primary mt-2 mx-2\" onClick={cremover}>Trim the spaces</button>\r\n                <button type=\"button\" className=\"btn btn-primary mt-2\" onClick={capital}>Capitalize first word</button>\r\n                <button type=\"button\" className=\"btn btn-primary mt-2 mx-2\" onClick={cleartext}>Clear text</button>\r\n            </div>\r\n\r\n\r\n            <div className=\"container mt-5\" style={{ color: props.mode === 'light' ? '#111111' : 'light' }}>\r\n                <h4 style={{ color: props.mode === '#111111' ? 'white' : 'black' }}>Word count and length of characters are as:</h4>\r\n                <p style={{ color: props.mode === '#111111' ? 'white' : 'black' }}>No. of characters are: {text.length}</p>\r\n\r\n\r\n                <p style={{ color: props.mode === '#111111' ? 'white' : 'black' }}>Word count is :{text.split(\" \").length}</p>\r\n                {/* <h3>Preview trimmed</h3>\r\n                <p>{new2}</p> */}\r\n\r\n\r\n                <h3 className=\"my-5\" style={{ color: props.mode === '#111111' ? 'white' : 'black' }}>Preview here</h3>\r\n                <p style={{ color: props.mode === '#111111' ? 'white' : 'black' }}>{text.length > 0 ? text : 'Enter something above to preview here'}</p>\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\nUpperCase.propTypes = {\r\n    heading: PropTypes.string\r\n\r\n}\r\nUpperCase.defaultProps = {\r\n    heading: 'default heading'\r\n\r\n};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Alert(props) {\r\n\r\n    const cap = (word) => {\r\n\r\n        const new2 = word.toLowerCase();\r\n        return new2.charAt(0).toUpperCase() + new2.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            {cap(props.alert.type)} <strong>{props.alert.text}</strong>\r\n\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\n\nimport Navbar from './components/Navbar'\nimport UpperCase from './components/UpperCase'\n// import About from './components/About'\nimport Alert from './components/Alert'\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\n\nfunction App() {\n\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (text, type) => {\n    setAlert({\n      text: text,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const bgcol = () => {\n    if (mode === '#111111') {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('#111111');\n      document.body.style.backgroundColor = '#111111';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n\n  }\n\n\n\n\n\n\n  return (\n    <>\n\n\n\n      <Alert alert={alert} />\n\n\n      {/* <Router> */}\n      <Navbar title=\"MyApp\" head=\"Home\" mode={mode} bgcol={bgcol} />\n\n      {/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n\n          <Route path=\"/\"> */}\n      <UpperCase heading=\"Enter your text here\" mode={mode} showAlert={showAlert} />\n      {/* </Route>\n        </Switch>\n\n\n      </Router> */}\n\n    </>\n\n\n\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}